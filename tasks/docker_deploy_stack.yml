---
- name: Template docker stack
  template:
    dest: "{{ docker_deploy_base_folder }}/docker-stack.yml"
    src: "{{ docker_deploy_stack_template }}"
  tags: docker_deploy

- name: Install docker_stack ansible module requirements
  pip:
    name: "{{ docker_deploy_stack_pip_requirements }}"
  tags: docker_deploy
  
- name: Define docker stack state and name
  set_fact:
    _docker_deploy_stack_state: "{{ docker_deploy_stack_state | default('present') }}"
    docker_deploy_stack_state__message: "??"
  tags: always

- name: Define message if starting
  set_fact:
    docker_deploy_stack_state__message: "{{ 'Start' }}"
  when: _docker_deploy_stack_state == 'present'
  tags: always

- name: Define message if stopping
  set_fact:
    docker_deploy_stack_state__message: "{{ 'Stopping' }}"
  no_log: True
  when: _docker_deploy_stack_state == 'absent'
  tags: always

- name: "{{ docker_deploy_stack_state__message }} docker stack"
  docker_stack:
    state: "{{ _docker_deploy_stack_state }}"
    name: "{{ _docker_deploy_name }}"
    prune: "{{ docker_deploy_stack_prune | default(omit) }}"
    compose:
      - "{{ docker_deploy_base_folder }}/docker-stack.yml"
  # retry deploy the stack, because sometimes it raises some strange errors that a new deploy fixes.
  retries: 5
  delay: 10
  tags: docker_deploy
  
- name: Pause for {{ docker_deploy_stack_pause_to_verify | default(15) }} seconds so previous version of the stack could stop
  pause:
    seconds: "{{ docker_deploy_stack_pause_to_verify | default(15) }}"
  tags: docker_deploy
  
- name: HealthCheck
  shell: docker stack ps {{ _docker_deploy_name }} | tail -n +2 | grep -v " \\\\_ " | egrep -v "[_-]job" | awk '{ if ( $5 != $6 ) {exit -1} }'
  retries: "{{ docker_deploy_stack_verify_retries | default(50) }}"
  delay: "{{ docker_deploy_stack_verify_delay | default(15) }}"
  register: result
  until: result.rc == 0
  when: not ansible_check_mode and _docker_deploy_stack_state == 'present'
  changed_when: False
  tags: 
    - docker_deploy
    - healthcheck
